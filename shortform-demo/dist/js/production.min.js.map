{"version":3,"sources":["../../public/js/app.js","../../public/js/controllers/PlayCtrl.js","../../public/js/controllers/RootCtrl.js","../../public/js/controllers/SettingsCtrl.js","../../public/js/services/Words.js"],"names":["DEV","VERSION","origin","window","location","PlayCtrl","$scope","$state","$timeout","Words","noWordsForReview","getNextAvailableWord","quizCtrl","loading","getAll","then","response","now","moment","console","log","utc","format","words","data","filtered","_","filter","w","currentBin","nextReviewDate","isSameOrBefore","sorted","reverse","sortBy","length","currentWord","remove","err","revealed","markCorrect","this","numCorrect","error","add","submit","markWrong","numWrong","angular","copy","updateOne","_id","RootCtrl","state","SettingsCtrl","getWords","success","msg","newWordComposer","name","definition","statusMsg","self","createOne","deleteWord","wordId","deleteOne","editWordComposer","selectedWord","select","word","isPastDate","date","formatLocalTime","local","$http","query","url","REST_URL","$","param","get","getOne","id","post","delete","props","put","indexOf","module","config","$stateProvider","$urlRouterProvider","$locationProvider","abstract","templateUrl","controller","otherwise","html5Mode","enabled","requireBase","run","$rootScope","$transitions","factory"],"mappings":"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","file":"production.min.js","sourcesContent":["DEV = {\n\tVERSION: 'v20190302.4'\n};\n\nvar origin = window.origin ? window.origin : window.location.origin;\n\nif (origin.indexOf('//localhost:') !== -1 || origin.indexOf('192.168.1.') !== -1) {\n\tREST_URL = 'http://localhost:8555/api';\n} else {\n\tREST_URL = 'http://shortform-demo-api.zenimus.com/api';\n}\nconsole.log('REST_URL: ', REST_URL);\n\nangular.module('app', [\n\t\t'ui.router',\n\t\t'ui.bootstrap',\n\t\t'ngAnimate'\n\t])\n\n.config(['$stateProvider', '$urlRouterProvider', '$locationProvider', function($stateProvider, $urlRouterProvider, $locationProvider) {\n\n\t$stateProvider\n\t\t.state('root', {\n\t\t\tabstract: true,\n\t\t\ttemplateUrl: 'views/root.html',\n\t\t\tcontroller: 'RootCtrl'\n\t\t})\n\t\t.state('root.play', {\n\t\t\turl: '/',\n\t\t\ttemplateUrl: 'views/play.html',\n\t\t\tcontroller: 'PlayCtrl'\n\t\t})\n\t\t.state('root.settings', {\n\t\t\turl: '/settings',\n\t\t\ttemplateUrl: 'views/settings.html',\n\t\t\tcontroller: 'SettingsCtrl'\n\t\t})\n\t\t;\n\n\t$urlRouterProvider.otherwise('/settings');\n\n\t$locationProvider.html5Mode({\n\t\tenabled: true,\n\t\trequireBase: true\n\t});\n}])\n\n.run(['$rootScope', '$transitions', '$state', function($rootScope, $transitions, $state) {\n\t$rootScope.VERSION = DEV.VERSION;\n}]);\n\n\n\n","/* global _, moment */\nangular.module('app')\n.controller('PlayCtrl', [\n    '$scope',\n    '$state',\n    '$timeout',\n    'Words',\n    PlayCtrl\n    ]);\n\nfunction PlayCtrl($scope, $state, $timeout, Words) {\n    $scope.noWordsForReview = false;\n\n    $scope.getNextAvailableWord = function() {\n        $scope.quizCtrl.loading = true;\n\n        Words.getAll().then(function(response) {\n            var now = moment();\n            console.log('now.format(): ', now.utc().format());\n            var words = response.data.words;\n            console.log('words: ', words);\n            // Exclude words in bin 11 (never review) and 12 (hard to remember)\n            // Filter for only dued reviews, unless word is in bin 0 then include as well\n            var filtered = _.filter(words, function(w) {\n                return w.currentBin < 11 && (w.currentBin === 0 || moment(w.nextReviewDate).isSameOrBefore(now));\n            });\n            console.log('filtered: ', filtered);\n            // Priortize higher-numbered bins\n            var sorted = _.reverse(_.sortBy(filtered, 'currentBin'));\n\n            if (sorted.length) {\n                console.log('first word ready for review');\n                $scope.noWordsForReview = false;\n                $timeout(function() {\n                    $scope.quizCtrl.loading = false;\n                    $scope.quizCtrl.currentWord = sorted[0];\n                }, 0);\n\n            } else {\n                // If no words for review, determine whether all words are in final bins or if they are not yet up for review.\n                var removed = _.remove(words, function(w) {\n                    return w.currentBin > 10;\n                });\n                if (!words.length) {\n                    $scope.noWordsForReview = 'You have no more words to review; you are permanently done!';\n                } else {\n                    $scope.noWordsForReview = 'You are temporarily done; please come back later to review more words.';\n                }\n\n                console.log('first word not ready for review');\n                $timeout(function() {\n                    $scope.quizCtrl.loading = false;\n                }, 0);\n            }\n\n        }, function(err) {\n            console.log('err: ', err);\n        });\n    };\n\n    $scope.quizCtrl = {\n        currentWord: null,\n        revealed: false,\n        markCorrect: function() {\n            var nextReviewDate = moment();\n            this.currentWord.numCorrect++;\n            this.currentWord.currentBin++;\n            switch (this.currentWord.currentBin) {\n                case 0:\n                    console.error('noop');\n                    break;\n                case 1:\n                    nextReviewDate.add(5, 'seconds');\n                    break;\n                case 2:\n                    nextReviewDate.add(25, 'seconds');\n                    break;\n                case 3:\n                    nextReviewDate.add(2, 'minutes');\n                    break;\n                case 4:\n                    nextReviewDate.add(10, 'minutes');\n                    break;\n                case 5:\n                    nextReviewDate.add(1, 'hours');\n                    break;\n                case 6:\n                    nextReviewDate.add(5, 'hours');\n                    break;\n                case 7:\n                    nextReviewDate.add(1, 'days');\n                    break;\n                case 8:\n                    nextReviewDate.add(5, 'days');\n                    break;\n                case 9:\n                    nextReviewDate.add(25, 'days');\n                    break;\n                case 10:\n                    nextReviewDate.add(4, 'months');\n                    break;\n                case 11:\n                    nextReviewDate.add(100, 'years');\n                    break;\n                default:\n                    console.error('noop');\n                    break;\n            }\n            this.currentWord.nextReviewDate = nextReviewDate.format();\n\n            this.submit();\n        },\n        markWrong: function() {\n            this.currentWord.currentBin = 1;\n            this.currentWord.numWrong++;\n            if (this.currentWord.numWrong >= 10) {\n                this.currentWord.currentBin = 12;\n            } else {\n                this.currentWord.nextReviewDate = moment().add(5, 'seconds').format();\n            }\n            this.submit();\n        },\n        submit: function() {\n            this.revealed = false;\n            this.loading = true;\n\n            var w = angular.copy(this.currentWord);\n            this.currentWord = null;\n            Words.updateOne(w._id, w)\n                .then(function(response) {\n                    $scope.getNextAvailableWord();\n                }, function(err) {\n                    $scope.getNextAvailableWord();\n                });\n        },\n        loading: true\n    };\n\n\n\n    $scope.getNextAvailableWord();\n}\n","angular.module('app')\n.controller('RootCtrl', [\n    '$scope',\n    '$state',\n    RootCtrl\n    ]);\n\nfunction RootCtrl($scope, $state) {\n    $scope.state = $state;\n}\n","/* global moment */\nangular.module('app')\n.controller('SettingsCtrl', [\n    '$scope',\n    '$state',\n    '$timeout',\n    'Words',\n    SettingsCtrl\n    ]);\n\nfunction SettingsCtrl($scope, $state, $timeout, Words) {\n\n    function getWords() {\n        Words.getAll().then(function(response) {\n            console.log('Words.getAll response: ', response);\n            if (response.data.success) {\n                $timeout(function() {\n                    $scope.words = response.data.words;\n                }, 0);\n            } else {\n                console.log('err: ', response.data.msg);\n            }\n        }, function(err) {\n            console.log('err: ', err);\n        });\n    }\n    getWords();\n\n    $scope.newWordComposer = {\n        name: '',\n        definition: '',\n        statusMsg: '',\n        submit: function() {\n            var self = this;\n            Words.createOne({name: this.name, definition: this.definition})\n                .then(function(response) {\n                    console.log('Words.createOne response: ', response);\n                    $timeout(function() {\n                        self.name = '';\n                        self.definition = '';\n                        self.statusMsg = 'Successfully added new word.';\n                        getWords();\n                    }, 0);\n                }, function(err) {\n                    self.statusMsg = 'Unable to add new word.';\n                });\n        }\n    };\n\n    $scope.deleteWord = function(wordId) {\n        Words.deleteOne(wordId)\n            .then(function(response) {\n                console.log('Words.deleteOne response: ', response);\n                $timeout(function() {\n                    getWords();\n                }, 0);\n            }, function(err) {\n                console.error('Unable to delete word err: ', err);\n            });\n    };\n\n    $scope.editWordComposer = {\n        selectedWord: '',\n        select: function(word) {\n            this.selectedWord = angular.copy(word);\n        },\n        submit: function() {\n\n        }\n    };\n\n    $scope.isPastDate = function(date) {\n        return moment(date).isSameOrBefore(moment());\n    };\n\n    $scope.formatLocalTime = function(date) {\n        return moment(date).local().format('M/D/YY [at] h:mma');\n    };\n}\n","angular.module('app')\n.factory('Words', [\n    '$http',\n    Words\n    ]);\n\nfunction Words($http) {\n\n    return {\n        getAll: getAll,\n        getOne: getOne,\n        createOne: createOne,\n        deleteOne: deleteOne,\n        updateOne: updateOne\n    };\n\n    function getAll(query) {\n        var url = REST_URL + '/word' + (query ? '?' + $.param(query) : '');\n        return $http.get(url);\n    }\n\n    function getOne(id, query) {\n        var url = REST_URL + '/word/' + id + (query ? '?' + $.param(query) : '');\n        return $http.get(url);\n    }\n\n    function createOne(word) {\n        var url = REST_URL + '/word';\n        return $http.post(url, word);\n    }\n\n    function deleteOne(id) {\n        var url = REST_URL + '/word/' + id;\n        return $http.delete(url);\n    }\n\n    function updateOne(id, props) {\n        var url = REST_URL + '/word/' + id;\n        return $http.put(url, props);\n    }\n}\n\n"]}